"""Initial migration”

Revision ID: b3639f36a523
Revises: 04e1c0d5f1f0
Create Date: 2025-05-13 18:49:58.458682

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b3639f36a523'
down_revision: Union[str, None] = '04e1c0d5f1f0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('carts_user_id_fkey', 'carts', type_='foreignkey')
    op.create_foreign_key(None, 'carts', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('orders', 'status',
               existing_type=postgresql.ENUM('PROCESSING', 'CANCELED', 'CLOSED', name='statusenum'),
               type_=sa.Enum('PROCESSING', 'CANCELED', 'CLOSED', name='statusenum', native_enum=False),
               existing_nullable=False)
    op.drop_constraint('orders_user_id_fkey', 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('products', 'stock',
               existing_type=postgresql.ENUM('AVAILABLE', 'NOT_AVAILABLE', name='stockstatusenum'),
               type_=sa.Enum('AVAILABLE', 'NOT_AVAILABLE', name='stockstatusenum', native_enum=False),
               existing_nullable=False)
    op.drop_constraint('products_category_id_fkey', 'products', type_='foreignkey')
    op.create_foreign_key(None, 'products', 'categories', ['category_id'], ['id'], ondelete='CASCADE')
    op.alter_column('user_groups', 'name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('USER', 'ADMIN', name='usergroupenum', native_enum=False),
               existing_nullable=False)
    op.alter_column('users', 'gender',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('MAN', 'WOMAN', name='genderenum', native_enum=False),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'gender',
               existing_type=sa.Enum('MAN', 'WOMAN', name='genderenum', native_enum=False),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('user_groups', 'name',
               existing_type=sa.Enum('USER', 'ADMIN', name='usergroupenum', native_enum=False),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.create_foreign_key('products_category_id_fkey', 'products', 'categories', ['category_id'], ['id'])
    op.alter_column('products', 'stock',
               existing_type=sa.Enum('AVAILABLE', 'NOT_AVAILABLE', name='stockstatusenum', native_enum=False),
               type_=postgresql.ENUM('AVAILABLE', 'NOT_AVAILABLE', name='stockstatusenum'),
               existing_nullable=False)
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key('orders_user_id_fkey', 'orders', 'users', ['user_id'], ['id'])
    op.alter_column('orders', 'status',
               existing_type=sa.Enum('PROCESSING', 'CANCELED', 'CLOSED', name='statusenum', native_enum=False),
               type_=postgresql.ENUM('PROCESSING', 'CANCELED', 'CLOSED', name='statusenum'),
               existing_nullable=False)
    op.drop_constraint(None, 'carts', type_='foreignkey')
    op.create_foreign_key('carts_user_id_fkey', 'carts', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###
